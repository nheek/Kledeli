# Use an official PHP runtime as a parent image
FROM php:7.4-apache

# Set the working directory inside the container
WORKDIR /var/www/html

# Copy the current directory contents into the container at /var/www/html
COPY . /var/www/html

# Install any needed dependencies
RUN apt-get update && apt-get install -y \
    git \
    zip \
    unzip \
    vim \
    # Install Xdebug for development
    && pecl install xdebug \
    && docker-php-ext-enable xdebug \
    && rm -rf /var/lib/apt/lists/*

# Install mysqli extension
RUN docker-php-ext-install mysqli

# Enable Apache modules
RUN a2enmod rewrite

# Copy the development PHP config file
COPY php.ini /usr/local/etc/php/php.ini

# Configure Xdebug for remote debugging in development
RUN echo "xdebug.mode=debug" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.client_host=host.docker.internal" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.client_port=9003" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.start_with_request=yes" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Ensure development PHP settings (error display, etc.)
RUN echo "display_errors=On" >> /usr/local/etc/php/conf.d/docker-php-dev.ini \
    && echo "error_reporting=E_ALL" >> /usr/local/etc/php/conf.d/docker-php-dev.ini

# Set permissions (optional based on project needs)
RUN chown -R www-data:www-data /var/www/html

# By default, start Apache in foreground mode
CMD ["apache2-foreground"]